runAR=function(Y,indice,lag,type="fixed"){
  Y2=cbind(Y[,indice])
  aux=embed(Y2,4+lag)
  y=aux[,1]
  X=aux[,-c(1:(ncol(Y2)*lag))]  
  
  if(lag==1){
    X.out=as.matrix(tail(aux,1)[,1:ncol(X), drop=FALSE])  
  }else{
    X.out=aux[,-c(1:(ncol(Y2)*(lag-1)))]
    X.out=tail(X.out,1)[1:ncol(X)]
  }
  X.out=as.matrix(tail(aux,1)[,1:ncol(X), drop=FALSE])  # y = y[1:(length(y)-lag+1)]
  # X = X[1:(nrow(X)-lag+1),]
  
  
  if(type=="fixed"){
    model=lm(y~X)
    coef=coef(model)
  }
  
  if(type=="bic"){
    bb=Inf
    for(i in seq(1,ncol(X),1)){
      m=lm(y~X[,1:i])
      crit=BIC(m)
      if(crit<bb){
        bb=crit
        model=m
        ar.coef=coef(model)
      }
    }
    coef=rep(0,ncol(X)+1)
    coef[1:length(ar.coef)]=ar.coef
  }
  pred=c(1,X.out)%*%coef
  
  return(list("model"=model,"pred"=pred,"coef"=coef))
}



ar.rolling.window=function(Y,nprev,indice=1,lag=1,type="fixed"){
  
  save.coef=matrix(NA,nprev,5)
  save.pred=matrix(NA,nprev,1)
  for(i in nprev:1){
    window_len <- nrow(Y)-nprev-12; Tplush <- nrow(Y)+1-i ; endwind <- Tplush-lag ;  beginwind <- endwind-window_len ; Y.window=Y[(1+nprev-i):endwind,]
    fact=runAR(Y.window,indice,lag)
    save.coef[(1+nprev-i),]=fact$coef
    save.pred[(1+nprev-i),]=fact$pred
    cat("iteration",(1+nprev-i),"\n")
  }
  
  real=Y[,indice]
  
  #these lines seem pointless, commenting out
  # plot(real,type="l")
  # lines(c(rep(NA,length(real)-nprev),save.pred),col="red")
  
  rmse=sqrt(mean((tail(real,nprev)-save.pred)^2))
  mae=mean(abs(tail(real,nprev)-save.pred))
  
  #median absolute deviation from the median in paper, but not in code
  mad = median(abs(tail(real,nprev)-save.pred - median(tail(real,nprev)-save.pred)))
  
  #mean absolute deviation from  he mean
  mean_ad = mean(abs(tail(real,nprev)-save.pred - mean(tail(real,nprev)-save.pred)))
  
  
  #mean relative absolute error (relative to random walk)
  #last 132 lagged one month values are
  #real[(nrow(dados)-nprev):(nrow(dados)-1)]
  mrae = mean(abs( (tail(real,nprev)-save.pred)/
                     (tail(real,nprev)-real[(nrow(dados)-nprev):(nrow(dados)-1)]  )     ))
  
  #mean absolute scaled error
  #equivalent to mae of method divided by nae of naive forecast
  #first calculate the denomiator
  #mean of vector of length nprev-1
  tempdenom = mean( abs(tail(real,nprev-1) - real[(nrow(dados)-nprev+1):(nrow(dados)-1)]  ) )
  #then the overall measure is
  mase=mae/tempdenom
  
  #mean absolute percentage error
  mape = (100/nprev)*mean(abs((tail(real,nprev)-save.pred)/tail(real,nprev)))
  
  #normalized rmse
  nrmse = rmse/(max(tail(real,nprev))-min(tail(real,nprev)))
  
  #rmse relative to random walk
  
  #rmse of naive rw forecast
  rwrmse=sqrt(mean((tail(real,nprev)-real[(nrow(dados)-nprev):(nrow(dados)-1)])^2))
  
  rmse_rel_rw = rmse/rwrmse
  
  
  errors=c("rmse"=rmse,
           "mae"=mae,
           "mad"=mad,
           "mean_ad"=mean_ad,
           "mrae"=mrae,
           "mase"=mase,
           "mape"=mape,
           "nrmse"=nrmse,
           "rmse_rel_rw"=rmse_rel_rw)
  
  #mean prediction interval coverage
  # predint_cov = mean( 1*((save.pred_intervals[,1] < tail(real,nprev))  & (tail(real,nprev) < save.pred_intervals[,2])   ))
  
  #mean prediction interval width
  # predint_width = mean(save.pred_intervals[,2] - save.pred_intervals[,1])
  
  
  
  
  
  
  
  return(list("pred"= save.pred,
              "errors"= errors,"coef"=save.coef#,
              # "save.pred_intervals"= save.pred_intervals,
              #"save.geweke_bart_testpreds"= save.geweke_bart_testpreds,
              #"save.geweke_bart_sigma"= save.geweke_bart_sigma,
              # "save.importance"= save.importance,
              # "save.pip"= save.pip,
              # "predint_cov"= predint_cov,
              # "predint_width"= predint_width
  ))
  
  # return(list("pred"=save.pred,"coef"=save.coef,"errors"=errors))
}

source("UK/first-sample/functions/rep_Eoghan_newPCAoldstart/func-ar.R")
# library(HDeconometricsBeta)
load("UK/first-sample/rawdata.rda")
Y=dados


nprev=132


## == passado == ##
 
ar1c=ar.rolling.window(Y,nprev,1,1,type="fixed")
ar1p=ar.rolling.window(Y,nprev,2,1,type="fixed")
ar2c=ar.rolling.window(Y,nprev,1,2,type="fixed")
ar2p=ar.rolling.window(Y,nprev,2,2,type="fixed")
ar3c=ar.rolling.window(Y,nprev,1,3,type="fixed")
ar3p=ar.rolling.window(Y,nprev,2,3,type="fixed")
ar4c=ar.rolling.window(Y,nprev,1,4,type="fixed")
ar4p=ar.rolling.window(Y,nprev,2,4,type="fixed")
ar5c=ar.rolling.window(Y,nprev,1,5,type="fixed")
ar5p=ar.rolling.window(Y,nprev,2,5,type="fixed")
ar6c=ar.rolling.window(Y,nprev,1,6,type="fixed")
ar6p=ar.rolling.window(Y,nprev,2,6,type="fixed")
ar7c=ar.rolling.window(Y,nprev,1,7,type="fixed")
ar7p=ar.rolling.window(Y,nprev,2,7,type="fixed")
ar8c=ar.rolling.window(Y,nprev,1,8,type="fixed")
ar8p=ar.rolling.window(Y,nprev,2,8,type="fixed")
ar9c=ar.rolling.window(Y,nprev,1,9,type="fixed")
ar9p=ar.rolling.window(Y,nprev,2,9,type="fixed")
ar10c=ar.rolling.window(Y,nprev,1,10,type="fixed")
ar10p=ar.rolling.window(Y,nprev,2,10,type="fixed")
ar11c=ar.rolling.window(Y,nprev,1,11,type="fixed")
ar11p=ar.rolling.window(Y,nprev,2,11,type="fixed")
ar12c=ar.rolling.window(Y,nprev,1,12,type="fixed")
ar12p=ar.rolling.window(Y,nprev,2,12,type="fixed")


bar1c=ar.rolling.window(Y,nprev,1,1,type="bic")
bar1p=ar.rolling.window(Y,nprev,2,1,type="bic")
bar2c=ar.rolling.window(Y,nprev,1,2,type="bic")
bar2p=ar.rolling.window(Y,nprev,2,2,type="bic")
bar3c=ar.rolling.window(Y,nprev,1,3,type="bic")
bar3p=ar.rolling.window(Y,nprev,2,3,type="bic")
bar4c=ar.rolling.window(Y,nprev,1,4,type="bic")
bar4p=ar.rolling.window(Y,nprev,2,4,type="bic")
bar5c=ar.rolling.window(Y,nprev,1,5,type="bic")
bar5p=ar.rolling.window(Y,nprev,2,5,type="bic")
bar6c=ar.rolling.window(Y,nprev,1,6,type="bic")
bar6p=ar.rolling.window(Y,nprev,2,6,type="bic")
bar7c=ar.rolling.window(Y,nprev,1,7,type="bic")
bar7p=ar.rolling.window(Y,nprev,2,7,type="bic")
bar8c=ar.rolling.window(Y,nprev,1,8,type="bic")
bar8p=ar.rolling.window(Y,nprev,2,8,type="bic")
bar9c=ar.rolling.window(Y,nprev,1,9,type="bic")
bar9p=ar.rolling.window(Y,nprev,2,9,type="bic")
bar10c=ar.rolling.window(Y,nprev,1,10,type="bic")
bar10p=ar.rolling.window(Y,nprev,2,10,type="bic")
bar11c=ar.rolling.window(Y,nprev,1,11,type="bic")
bar11p=ar.rolling.window(Y,nprev,2,11,type="bic")
bar12c=ar.rolling.window(Y,nprev,1,12,type="bic")
bar12p=ar.rolling.window(Y,nprev,2,12,type="bic")




### == juntando tudo ==  ###

cpi=cbind(ar1c$pred,ar2c$pred,ar3c$pred,ar4c$pred,
          ar5c$pred,ar6c$pred,ar7c$pred,ar8c$pred,
          ar9c$pred,ar10c$pred,ar11c$pred,ar12c$pred)

pce=cbind(ar1p$pred,ar2p$pred,ar3p$pred,ar4p$pred,
          ar5p$pred,ar6p$pred,ar7p$pred,ar8p$pred,
          ar9p$pred,ar10p$pred,ar11p$pred,ar12p$pred)

bcpi=cbind(bar1c$pred,bar2c$pred,bar3c$pred,bar4c$pred,
          bar5c$pred,bar6c$pred,bar7c$pred,bar8c$pred,
          bar9c$pred,bar10c$pred,bar11c$pred,bar12c$pred)

bpce=cbind(bar1p$pred,bar2p$pred,bar3p$pred,bar4p$pred,
          bar5p$pred,bar6p$pred,bar7p$pred,bar8p$pred,
          bar9p$pred,bar10p$pred,bar11p$pred,bar12p$pred)



##
write.table(cpi,"UK/forecasts/rep_passado2000_fixed_oldstart/ar-cpi.csv",sep=";",row.names = FALSE, col.names = FALSE)
write.table(pce,"UK/forecasts/rep_passado2000_fixed_oldstart/ar-pce.csv",sep=";",row.names = FALSE, col.names = FALSE)

write.table(bcpi,"UK/forecasts/rep_passado2000_fixed_oldstart/bicar-cpi.csv",sep=";",row.names = FALSE, col.names = FALSE)
write.table(bpce,"UK/forecasts/rep_passado2000_fixed_oldstart/bicar-pce.csv",sep=";",row.names = FALSE, col.names = FALSE)








##
write.table(cpi,"UK/forecasts/rep_passado2000_fixed_oldstart/ar-cpi.csv",sep=";",row.names = FALSE, col.names = FALSE)
write.table(pce,"UK/forecasts/rep_passado2000_fixed_oldstart/ar--pce.csv",sep=";",row.names = FALSE, col.names = FALSE)

#save all the results, including intervals etc
save(ar1c,ar2c,ar3c,ar4c,
     ar5c,ar6c,ar7c,ar8c,
     ar9c,ar10c,ar11c,ar12c ,
     file = "UK/forecasts/rep_passado2000_fixed_oldstart/ar-all-cpi.Rdata")


arcpi_list <- list(ar1c,ar2c,ar3c,ar4c,
                               ar5c,ar6c,ar7c,ar8c,
                               ar9c,ar10c,ar11c,ar12c)

save(arcpi_list ,file =  "UK/forecasts/rep_passado2000_fixed_oldstart/ar-list-cpi.Rdata")


arpce_list <- list(ar1p,ar2p,ar3p,ar4p,
                               ar5p,ar6p,ar7p,ar8p,
                               ar9p,ar10p,ar11p,ar12p)

save(arpce_list , file = "UK/forecasts/rep_passado2000_fixed_oldstart/ar-list-pce.Rdata")










##
write.table(bcpi,"UK/forecasts/rep_passado2000_fixed_oldstart/bar-cpi.csv",sep=";",row.names = FALSE, col.names = FALSE)
write.table(bpce,"UK/forecasts/rep_passado2000_fixed_oldstart/bar--pce.csv",sep=";",row.names = FALSE, col.names = FALSE)

#save all the results, including intervals etc
save(bar1c,bar2c,bar3c,bar4c,
     bar5c,bar6c,bar7c,bar8c,
     bar9c,bar10c,bar11c,bar12c ,
     file = "UK/forecasts/rep_passado2000_fixed_oldstart/bar-all-cpi.Rdata")


barcpi_list <- list(bar1c,bar2c,bar3c,bar4c,
                               bar5c,bar6c,bar7c,bar8c,
                               bar9c,bar10c,bar11c,bar12c)

save(barcpi_list ,file =  "UK/forecasts/rep_passado2000_fixed_oldstart/bar-list-cpi.Rdata")


barpce_list <- list(bar1p,bar2p,bar3p,bar4p,
                               bar5p,bar6p,bar7p,bar8p,
                               bar9p,bar10p,bar11p,bar12p)

save(barpce_list , file = "UK/forecasts/rep_passado2000_fixed_oldstart/bar-list-pce.Rdata")










